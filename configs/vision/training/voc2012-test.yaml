name: "VOC2012-FasterRCNN-ResNet"

dataset:
  MODE: "torchvision"
  NAME: "VOCDetection"
  trn_size: 11540
  val_size: 100
  # list of parameters used when using `data.dataset.torchvision_dataset` to load `torchvision.datasets`
  dataset_base_cfg:
    root: "./voc2012"
    year: "2012"
  dataset_subset_cfg:
    trn:
      download: True
      image_set: "trainval"
    val:
      image_set: "val"
  transformations: [] # same format with `transform`.
  initial_transform:
    name: "DetectionVOCLabelTransform"

# Data augmentation for FasterRCNN is adopted from:
# https://github.com/facebookresearch/maskrcnn-benchmark/blob/main/maskrcnn_benchmark/data/transforms/build.py
# https://github.com/jwyang/faster-rcnn.pytorch/blob/master/lib/roi_data_layer/roibatchLoader.py
transform:
  [
    [
      "trn,val",
      [
        { "name": "ToTensor", "args": {} },
        {
          "name": "Normalize",
          "args": { "mean": [0.4038, 0.4546, 0.4814], "std": [1, 1, 1] },
        },
      ],
    ],
    [
      "trn",
      [
        {
          "name": "DetectionCropToRatio",
          "args": { "max_ratio": 3, "min_ratio": 0.3333 },
        },
        {
          "name": "DetectionConstrainImageSize",
          "args": { "min_size": 600, "max_size": 1000 },
        },
        { "name": "DetectionHFlip", "args": { "prob": 0.5 } },
      ],
    ],
    [
      "val",
      [
        {
          "name": "DetectionConstrainImageSize",
          "args": { "min_size": 800, "max_size": 1000 },
        },
      ],
    ],
    ["trn,val", [{ "name": "YOLObbox2Pytorch" }]],
  ]

dataloader:
  collate_fn:
    images:
      name: "KeepSequence"
    boxes:
      name: "KeepSequence"
    labels:
      name: "KeepSequence"
model:
  backbone:
    TYPE: "timm"
    ID: "resnet50"
    cfg:
      pretrained: False
    out_features: 2048
  reduction:
    ID: "roipool"
  hooks:
    rpn:
      model: "backbone"
      layer_name: "layer3"
  heads:
    rpn:
      ID: "RPNHead"
      cfg:
        d: 256
        n: 3
        k: 9
        in_channels: 1024

    roi_pooler:
      ID: "ROIPooler"
      cfg:
        output_size: [7, 7]

    anchor_generator:
      ID: "AnchorGenerator"
      cfg:
        sizes: [128, 256, 512]
        aspect_ratios: [0.5, 1.0, 2.0]

    classifier:
      ID: ClassificationHead
      cfg:
        reduction: "none"
        dropout: 0.2
        in_features: 128
        num_classes: 21
        return_logits: True # return logits instead of softmax probability.

training:
  ID: "TorchVisionFasterRCNN"
  batch_size: 1
  epochs: 100
  lr: 0.1

  optimizer: "sgd"
  optimizer_cfg:
    momentum: 0.9
    weight_decay: 0.0005
  lr_scheduler: "cosine"
  lr_scheduler_cfg: {}

  lambda_reg: 10.0

validation:
  batch_size: 1

debug:
  view_train_augmentation:
    is_xywh: False
# other useful configs.
wandb:
  project: "FasterRCNN-detection"

const:
  task: "object detection"
  normalization_mean: [0.4038, 0.4546, 0.4814]
  normalization_std: [1, 1, 1]

  label_map:
    - "background"
    - "aeroplane"
    - "bicycle"
    - "bird"
    - "boat"
    - "bottle"
    - "bus"
    - "car"
    - "cat"
    - "chair"
    - "cow"
    - "diningtable"
    - "dog"
    - "horse"
    - "motorbike"
    - "person"
    - "pottedplant"
    - "sheep"
    - "sofa"
    - "train"
    - "tvmonitor"
